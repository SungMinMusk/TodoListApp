{"remainingRequest":"C:\\_vue\\todolistapp\\node_modules\\babel-loader\\lib\\index.js!C:\\_vue\\todolistapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\_vue\\todolistapp\\src\\components\\List.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\_vue\\todolistapp\\src\\components\\List.vue","mtime":1568557900000},{"path":"C:\\_vue\\todolistapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571484806300},{"path":"C:\\_vue\\todolistapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\_vue\\todolistapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\_vue\\\\todolistapp\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Constant from '../Constant';\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'List',\n  computed: mapState(['todolist']),\n  methods: _objectSpread({\n    checked: function checked(done) {\n      if (done) return {\n        checked: true\n      };else return {\n        checked: false\n      };\n    }\n  }, mapActions([Constant.DELETE_TODO, Constant.DONE_TOGGLE])) // methods : {\n  //     checked : function(done) {\n  //         if(done) return { checked:true };\n  //         else return { checked:false };\n  //     },\n  //     deleteTodo : function(payload) {\n  //         this.$store.dispatch(Constant.DELETE_TODO, payload);\n  //     },\n  //     doneToggle : function(payload) {\n  //         this.$store.dispatch(Constant.DONE_TOGGLE, payload);\n  //     }\n  // }\n\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAA,QAAA,MAAA,aAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,QAAA,MADA;AAEA,YAAA,SAAA,CAAA,UAAA,CAAA,CAFA;AAGA;AACA,aAAA,iBAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,OAAA;AAAA,iBAAA;AAAA,OAAA,CAAA,KACA,OAAA;AAAA,iBAAA;AAAA,OAAA;AACA;AAJA,KAKA,WAAA,CAAA,SAAA,WAAA,EAAA,SAAA,WAAA,CAAA,CALA,CAHA,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBA,CAAA","sourcesContent":["<style>\n* {  box-sizing: border-box;  }\nul {  margin: 0; padding: 0; }\nul li { \n    cursor: pointer; position: relative; padding: 8px 8px 8px 40px;\n    background: #eee; font-size: 14px;  transition: 0.2s;\n    -webkit-user-select: none; -moz-user-select: none;\n    -ms-user-select: none; user-select: none;  \n}\nul li:hover {  background: #ddd;  }\nul li.checked {\n    background: #BBB;  color: #fff; text-decoration: line-through;\n}\nul li.checked::before {\n    content: ''; position: absolute; border-color: #fff;\n    border-style: solid; border-width: 0px 1px 1px 0px; \n    top: 10px; left: 16px;  transform: rotate(45deg);\n    height: 8px; width: 8px;\n}\n.close {\n    position: absolute; right: 0; top: 0;\n    padding: 8px 12px 8px 12px\n}\n.close:hover {\n    background-color: #f44336;  color: white;\n}\n.list-enter-active, .list-leave-active {\n  transition: all .5s;\n}\n.list-enter, .list-leave-to {\n  opacity: 0;\n  transform: translateY(50px);\n}\n</style>\n<template>\n    <transition-group name=\"list\" tag=\"ul\">\n        <li v-for=\"a in todolist\" :key=\"a.id\" :class=\"checked(a.done)\"\n            @click=\"doneToggle({ id: a.id })\">\n            <span>{{ a.todo }}</span>\n            <span v-if=\"a.done\"> (완료)</span>\n            <span class=\"close\" @click.stop=\"deleteTodo({id:a.id})\">&#x00D7;</span>\n        </li>\n    </transition-group>\n</template>\n<script type=\"text/javascript\">\nimport Constant from '../Constant'\nimport { mapActions, mapState } from 'vuex'\n\nexport default {\n    name: 'List',\n    computed : mapState(['todolist']),\n    methods : {\n        checked : function(done) {\n            if(done) return { checked:true };\n            else return { checked:false };\n        },\n        ...mapActions([ Constant.DELETE_TODO, Constant.DONE_TOGGLE ])\n    }\n    // methods : {\n    //     checked : function(done) {\n    //         if(done) return { checked:true };\n    //         else return { checked:false };\n    //     },\n    //     deleteTodo : function(payload) {\n    //         this.$store.dispatch(Constant.DELETE_TODO, payload);\n    //     },\n    //     doneToggle : function(payload) {\n    //         this.$store.dispatch(Constant.DONE_TOGGLE, payload);\n    //     }\n    // }\n}\n</script>"],"sourceRoot":"src\\components"}]}